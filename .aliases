# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# alias
# https://stackoverflow.com/questions/3446320/in-vim-how-to-map-save-to-ctrl-s
alias vim="stty -ixon && vim -v"
alias valiases="vim ~/.aliases"
alias vzshrc="vim ~/.zshrc"
alias szshrc="source ~/.zshrc"
alias gith="cd $HOME/git"
alias infr="gith && cd docker/infrakit"
alias mr="cd $HOME/git/onelogin.com"
alias cr="cd $HOME/git/core-api"
alias qm="cd $HOME/git/queued-messages-relay"
alias ds="cd $HOME/git/directory-service"
alias en="cd $HOME/git/core-api-mapping-engine"
alias whereami="git rev-parse --abbrev-ref HEAD"

# path
alias bastion="ssh bastionhostnonprod.onlgn.net -p 23222"
alias shcons="ssh api01.use1.shadow01.onlgn.net -t 'sudo -i -u deploy bash -c \"cd /srv/onelogin_new/current && bundle exec script/console shadow\"'"

# Ag
alias agls="ag -l --hidden -g "
find_and_replace_with_ag() {
  ag -l "$1" | xargs sed -i '' -e "s/$1/$2/g"
}
alias agrp=find_and_replace_with_ag

# IKE
alias ikeupdate="npm install -g @onelogin/infrakit"
alias cpwd="pwd | pbcopy"

function ike_current_project {
  ike_run_path=`basename "$PWD"`
  if [[ $ike_run_path == "onelogin.com" ]]; then
    ike_run_path='monorail-admin'
  elif [[ $ike_run_path == "onelogin-provisioning" ]]; then
    ike_run_path='provisioning-worker'
  fi
  echo $ike_run_path
}

export IKE_HOME="$HOME/git/docker/ike"
export ike_exe="$IKE_HOME/ike.js"

function ike_exec_cmd {
  [[ "$IKE_BRANCH" = "" ]] && tag="--tag $(whereami)" || tag="--tag $IKE_BRANCH"
  [[ "$IKE_ENV" = "" ]] && ike_env="-e dev" || ike_env="-e $IKE_ENV"

  args="--dev $tag $ike_env"

  cmd="$ike_exe run $(ike_current_project) $args '${@:1}'"
  echo $cmd
  sh -i -c $cmd
}

function cons {
  if [[ -f "script/console" ]]; then
    cmd="bundle exec script/console"
  elif [[ -f "bin/console" ]]; then
    cmd="bundle exec bin/console"
  else
    cmd="rails c"
  fi

  ike_exec_cmd $cmd
}

function spec {
  if [[ -f "bin/rspec" ]]; then
    cmd="bundle exec bin/rspec $1"
  elif [[ -f "script/spec" ]]; then
    cmd="bundle exec script/spec $1"
  else
    cmd="rspec"
  fi

  IKE_ENV="test"
  ike_exec_cmd $cmd
  IKE_ENV=""
}

function run {
  ike_exec_cmd "${@:1}"
}

function enter {
  ike_exec_cmd "/bin/bash"
}

function logs {
  cmd="$IKE_HOME/ike.js logs -f $(ike_current_project)"
  echo $cmd
  sh -i -c $cmd
}

function conf {
  gopwd="$IKE_HOME/../infrakit/ol/$(ike_current_project)"
  cd $gopwd
}

function rcp {
  cmd="ditto $1 /Users/romantomkiv/git/core-api-mapping-engine/$1"
  echo $cmd
  sh -i -c $cmd
}


alias ak="ssh-add ~/.ssh/gitmbp13"
alias al="ssh-add ~/.ssh/git_mbp"

alias ike="$ike_exe"

alias sync="source $HOME/dotfiles/sync.sh"
